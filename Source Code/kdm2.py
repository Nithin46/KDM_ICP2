# -*- coding: utf-8 -*-
"""KDM2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lbo7TiPRbVd0cZaayEVssWxyG3zKjy0V

# **Part of Speech (POS) Tagging**

For this, I had used spaCy library. First, I have imported the required library and then passed the input data. Finally, used word.pos_ & word.tag_ and explain(word.tag_) functions to print the desired output. 

*spaCy library comes pre-built with machine learning algorithms that, depending upon the context (surrounding words), it is capable of returning the correct POS tag for the word.
"""

import spacy
sp = spacy.load('en_core_web_sm')
data = sp("Xi Jinping is a Chinese politician who has served as General Secretary of the Chinese Communist Party (CCP) and Chairman of the Central Military Commission (CMC) since 2012, and President of the People's Republic of China (PRC) since 2013. He has been the paramount leader of China, the most prominent political leader in the country, since 2012. The son of Chinese Communist veteran Xi Zhongxun, he was exiled to rural Yanchuan County as a teenager following his father's purge during the Cultural Revolution and lived in a cave in the village of Liangjiahe, where he joined the CCP and worked as the party secretary.")
for word in data:
    print(f'{word.text:{12}} {word.pos_:{10}} {word.tag_:{8}} {spacy.explain(word.tag_)}')

"""# **Named entity recognizer (NER)**


"""

import spacy
from spacy import displacy # displacy() - Visualizing POS tags in a graphical way
nlp = spacy.load('en_core_web_sm')
text = nlp ("Xi Jinping is a Chinese politician who has served as General Secretary of the Chinese Communist Party (CCP) and Chairman of the Central Military Commission (CMC) since 2012, and President of the People's Republic of China (PRC) since 2013. He has been the paramount leader of China, the most prominent political leader in the country, since 2012. The son of Chinese Communist veteran Xi Zhongxun, he was exiled to rural Yanchuan County as a teenager following his father's purge during the Cultural Revolution and lived in a cave in the village of Liangjiahe, where he joined the CCP and worked as the party secretary.")
displacy.render(text, style = 'ent', jupyter=True)

"""**Another way**"""

import spacy
sp = spacy.load('en_core_web_sm')
data = sp("Xi Jinping is a Chinese politician who has served as General Secretary of the Chinese Communist Party (CCP) and Chairman of the Central Military Commission (CMC) since 2012, and President of the People's Republic of China (PRC) since 2013. He has been the paramount leader of China, the most prominent political leader in the country, since 2012. The son of Chinese Communist veteran Xi Zhongxun, he was exiled to rural Yanchuan County as a teenager following his father's purge during the Cultural Revolution and lived in a cave in the village of Liangjiahe, where he joined the CCP and worked as the party secretary.")
print(data.ents)  #ents - which returns the list of all the named entities in the data.
for entity in data.ents:
    print("{:30s}\t{:30s}\t".format(entity.text,entity.label_))

"""# **Lemmatization**"""

import nltk
nltk.download('punkt')
nltk.download('wordnet')
from nltk.stem import WordNetLemmatizer
wordnet_lemmatizer = WordNetLemmatizer()
data = "Xi Jinping is a Chinese politician who has served as General Secretary of the Chinese Communist Party (CCP) and Chairman of the Central Military Commission (CMC) since 2012, and President of the People's Republic of China (PRC) since 2013. He has been the paramount leader of China, the most prominent political leader in the country, since 2012. The son of Chinese Communist veteran Xi Zhongxun, he was exiled to rural Yanchuan County as a teenager following his father's purge during the Cultural Revolution and lived in a cave in the village of Liangjiahe, where he joined the CCP and worked as the party secretary."
nltk_tokens = nltk.word_tokenize(data)
print("{0:20}{1:30}".format("Original","Lemmatization"))
for w in nltk_tokens:
       print ("{0:20}{1:30}".format(w,wordnet_lemmatizer.lemmatize(w, pos="v"))) # I have passed the optional parameter Part of Speech as "v" - Verb. So it will process based on Verb.

"""# **Co-reference resolution**

"""

import numpy as np
import pandas as pd

MODEL_URL = "https://github.com/huggingface/neuralcoref-models/releases/" \
            "download/en_coref_md-3.0.0/en_coref_md-3.0.0.tar.gz"

!pip install spacy==2.0.12
!pip install {MODEL_URL}
!python -m spacy download en_core_web_md

import en_coref_md
nlp = en_coref_md.load()

test_sent = "Xi Jinping is a Chinese politician who has served as General Secretary of the Chinese Communist Party (CCP) and Chairman of the Central Military Commission (CMC) since 2012, and President of the People's Republic of China (PRC) since 2013. He has been the paramount leader of China, the most prominent political leader in the country, since 2012. The son of Chinese Communist veteran Xi Zhongxun, he was exiled to rural Yanchuan County as a teenager following his father's purge during the Cultural Revolution and lived in a cave in the village of Liangjiahe, where he joined the CCP and worked as the party secretary."
doc = nlp(test_sent)
for x in doc.ents:
    if x._.coref_cluster:
        print(x._.coref_cluster)

"""# **Parsing**

**Regular Expression Parsing**
"""

import nltk
nltk.download('punkt')
nltk.download('averaged_perceptron_tagger')
from nltk.tag import pos_tag
from nltk.tokenize import word_tokenize
data = "Xi Jinping is a Chinese politician who has served as General Secretary of the Chinese Communist Party (CCP) and Chairman of the Central Military Commission (CMC) since 2012, and President of the People's Republic of China (PRC) since 2013. He has been the paramount leader of China, the most prominent political leader in the country, since 2012. The son of Chinese Communist veteran Xi Zhongxun, he was exiled to rural Yanchuan County as a teenager following his father's purge during the Cultural Revolution and lived in a cave in the village of Liangjiahe, where he joined the CCP and worked as the party secretary."
new_token = nltk.pos_tag (word_tokenize(data))
new_token

np = r "NP: {<DT>?<JJ>*<NN>}" #This is a definition for a rule to group of words into a noun phrase.  It will group one determinant, then zero or more adjectives followed by zero or more nouns. 
chunk_parser = nltk.RegexpParser(np) #RegexpParser - Uses a set of regular expression patterns to specify the behavior of the parser. 
result = chunk_parser.parse(new_token)
result

"""**Pattern Parsing**"""

import nltk
nltk.download('punkt')
nltk.download('averaged_perceptron_tagger')
from nltk.tag import pos_tag
from nltk.tokenize import word_tokenize
from textblob import TextBlob
from textblob.parsers import PatternParser
data = "Xi Jinping is a Chinese politician who has served as General Secretary of the Chinese Communist Party (CCP)."
new_token = nltk.pos_tag (word_tokenize(data))
chunk_parser = PatternParser()
result = chunk_parser.parse(new_token)
result